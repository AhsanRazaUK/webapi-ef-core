// <auto-generated />
using System;
using Library.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.Infrastructure.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20191030131035_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.Core.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 239, DateTimeKind.Utc).AddTicks(8393),
                            FirstName = "Elizabeth",
                            IsDeleted = false,
                            LastName = "Gilbert"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 240, DateTimeKind.Utc).AddTicks(1946),
                            FirstName = "Alex",
                            IsDeleted = false,
                            LastName = "Michaelides"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 240, DateTimeKind.Utc).AddTicks(1966),
                            FirstName = "Jayson",
                            IsDeleted = false,
                            LastName = "Greene"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 240, DateTimeKind.Utc).AddTicks(1967),
                            FirstName = "Jennifer",
                            IsDeleted = false,
                            LastName = "Weiner"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 240, DateTimeKind.Utc).AddTicks(1969),
                            FirstName = "Yangsze",
                            IsDeleted = false,
                            LastName = "Choo"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 240, DateTimeKind.Utc).AddTicks(1971),
                            FirstName = "Taylor",
                            IsDeleted = false,
                            LastName = "Jenkins Reid"
                        });
                });

            modelBuilder.Entity("Library.Core.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId");

                    b.Property<string>("BookName");

                    b.Property<int>("CategoryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            BookName = "City of Girls",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 241, DateTimeKind.Utc).AddTicks(716),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            BookName = "The Silent Patient",
                            CategoryId = 2,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 241, DateTimeKind.Utc).AddTicks(2725),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            BookName = "Once More We Saw Stars",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 241, DateTimeKind.Utc).AddTicks(2739),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            BookName = "Mrs. Everything",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 241, DateTimeKind.Utc).AddTicks(2740),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 5,
                            BookName = "The Night Tiger",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 241, DateTimeKind.Utc).AddTicks(2741),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 6,
                            BookName = "Daisy Jones & The Six",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 241, DateTimeKind.Utc).AddTicks(2742),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Library.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Novel",
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 240, DateTimeKind.Utc).AddTicks(7426),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Thriller",
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 240, DateTimeKind.Utc).AddTicks(8146),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Memoir",
                            CreatedDate = new DateTime(2019, 10, 30, 13, 10, 35, 240, DateTimeKind.Utc).AddTicks(8154),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Library.Core.Entities.Book", b =>
                {
                    b.HasOne("Library.Core.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Library.Core.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
